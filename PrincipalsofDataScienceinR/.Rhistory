ggplot(dat, aes(Number_of_Connections)) +
geom_histogram() +
facet_grid(Belong~.)
ggplot(dat, aes(Count_Connections)) +
geom_histogram() +
facet_grid(Belong~.)
library(gridExtra)
library(ggplot2)
library(tidyverse)
dat=read.csv("NodeTest_Nov_2020.csv",header=TRUE) # choose an edgelist in .csv file format
dat
ggplot(dat, aes(Count_Connections)) +
geom_histogram() +
facet_grid(Belong~.)
ggplot(dat, aes(Count_Connections)) +
geom_histogram() +
facet_grid(Belong~.) +
ylab("Count of Students") +
xlab("Number of Connections per Student")
plot1 <- ggplot(penguins, aes(x=body_mass_g, y=species, color=species)) +
geom_boxplot() +
facet_grid(island~.) +
ylab("Species") +
xlab("Body Mass (Grams)") +
labs(fill = "Species") +
ggtitle("Species Weight Summary by Island")
library(gridExtra)
library(ggplot2)
library(tidyverse)
library(palmerpenguins)
data(penguins)
penguins
plot1 <- ggplot(penguins, aes(x=body_mass_g, y=species, color=species)) +
geom_boxplot() +
facet_grid(island~.) +
ylab("Species") +
xlab("Body Mass (Grams)") +
labs(fill = "Species") +
ggtitle("Species Weight Summary by Island")
plot2 <- ggplot(penguins, aes(body_mass_g, fill=species)) +
geom_histogram() +
facet_grid(island~.) +
ylab("Weight Frequencies") +
xlab("Body Mass (Grams)") +
labs(fill = "Species") +
ggtitle("Species Weight Distribution by Island")
grid.arrange(plot1, plot2, ncol=2)
ggplot(dat, aes(Count_Connections, fill=Belong)) +
geom_histogram() +
# facet_grid(Belong~.) +
ylab("Count of Students") +
xlab("Number of Connections per Student")
ggplot(dat, aes(Count_Connections, fill=Belong)) +
geom_histogram() +
# facet_grid(Belong~.) +
ylab("Count of Students") +
xlab("Number of Connections per Student") +
labs(fill = "Belong")
ggplot(dat, aes(Count_Connections, fill=Gender)) +
geom_histogram() +
# facet_grid(Belong~.) +
ylab("Count of Students") +
xlab("Number of Connections per Student") +
labs(fill = "Belong")
library(gridExtra)
library(ggplot2)
library(tidyverse)
dat=read.csv("NodeTest_Nov_2020.csv",header=TRUE) # choose an edgelist in .csv file format
dat
ggplot(dat, aes(Count_Connections, fill=Belong)) +
geom_histogram() +
# facet_grid(Belong~.) +
ylab("Count of Students") +
xlab("Number of Connections per Student") +
labs(fill = "Belong")
ggplot(dat, aes(Count_Connections, color=Belong)) +
geom_histogram() +
# facet_grid(Belong~.) +
ylab("Count of Students") +
xlab("Number of Connections per Student") +
labs(fill = "Belong")
ggplot(dat, aes(Count_Connections, color=Belong)) +
geom_histogram() +
# facet_grid(Belong~.) +
ylab("Count of Students") +
xlab("Number of Connections per Student")
# ggplot(dat, aes(Count_Connections, color=Belong)) +
#               geom_histogram(fill="White") +
#               # facet_grid(Belong~.) +
#               ylab("Count of Students") +
#               xlab("Number of Connections per Student")
ggplot(data=dat, aes(x=Count_Connections, y=len, fill=Belong)) +
geom_bar(stat="identity", color="black", position=position_dodge())+
theme_minimal()
# ggplot(dat, aes(Count_Connections, color=Belong)) +
#               geom_histogram(fill="White") +
#               # facet_grid(Belong~.) +
#               ylab("Count of Students") +
#               xlab("Number of Connections per Student")
ggplot(data=dat, aes(x=Count_Connections, y=count(Count_Connections), fill=Belong)) +
geom_bar(stat="identity", color="black", position=position_dodge())+
theme_minimal()
# ggplot(dat, aes(Count_Connections, color=Belong)) +
#               geom_histogram(fill="White") +
#               # facet_grid(Belong~.) +
#               ylab("Count of Students") +
#               xlab("Number of Connections per Student")
ggplot(data=dat, aes(x=Count_Connections, y=ClassYear, fill=Belong)) +
geom_bar(stat="identity", color="black", position=position_dodge())+
theme_minimal()
ggplot(dat, aes(Count_Connections, color=Belong)) +
geom_histogram(fill="White") +
# facet_grid(Belong~.) +
ylab("Count of Students") +
xlab("Number of Connections per Student")
ggplot(dat, aes(Count_Connections, fill=Belong)) +
geom_histogram() +
# facet_grid(Belong~.) +
ylab("Count of Students") +
xlab("Number of Connections per Student")
ggplot(dat, aes(Count_Connections)) +
geom_histogram(color="blue") +
facet_grid(Belong~.) +
ylab("Count of Students") +
xlab("Number of Connections per Student")
ggplot(dat, aes(Count_Connections)) +
geom_histogram(fill="blue") +
facet_grid(Belong~.) +
ylab("Count of Students") +
xlab("Number of Connections per Student")
ggplot(dat, aes(Count_Connections, fill="Belong")) +
geom_histogram(position="dodge") +
ylab("Count of Students") +
xlab("Number of Connections per Student")
ggplot(dat, aes(Count_Connections, fill=Belong)) +
geom_histogram(color="blue") +
# facet_grid(Belong~.) +
ylab("Count of Students") +
xlab("Number of Connections per Student")
ggplot(dat, aes(Count_Connections, fill=Belong)) +
geom_histogram(position="dodge") +
scale_fill_identity() +
# facet_grid(Belong~.) +
ylab("Count of Students") +
xlab("Number of Connections per Student")
ggplot(dat, aes(Count_Connections, fill=Belong)) +
geom_histogram(position="dodge") +
# facet_grid(Belong~.) +
ylab("Count of Students") +
xlab("Number of Connections per Student")
ggplot(dat, aes(Count_Connections, fill=Belong)) +
geom_histogram(position="dodge") +
# facet_grid(Belong~.) +
ylab("Count of Students") +
xlab("Number of Connections per Student") +
ggtitle("Number of Connections per Student Sparated by Belongingness")
ggplot(dat, aes(Count_Connections, fill=Belong)) +
geom_histogram(position="dodge") +
# facet_grid(Belong~.) +
ylab("Count of Students") +
xlab("Number of Connections per Student") +
ggtitle("Number of Connections per Student Separated by Belongingness")
ggplot(dat, aes(Count_Connections, fill=Belong)) +
geom_histogram(position="dodge", binwidth = 1) +
# facet_grid(Belong~.) +
ylab("Count of Students") +
xlab("Number of Connections per Student") +
ggtitle("Number of Connections per Student Separated by Belongingness")
ggplot(dat, aes(Count_Connections, fill=Belong)) +
geom_histogram(position="dodge", binwidth = 1.5) +
# facet_grid(Belong~.) +
ylab("Count of Students") +
xlab("Number of Connections per Student") +
ggtitle("Number of Connections per Student Separated by Belongingness")
ggplot(dat, aes(Count_Connections, fill=Belong)) +
geom_histogram(position="dodge", binwidth = 0) +
# facet_grid(Belong~.) +
ylab("Count of Students") +
xlab("Number of Connections per Student") +
ggtitle("Number of Connections per Student Separated by Belongingness")
ggplot(dat, aes(Count_Connections, fill=Belong)) +
geom_histogram(position="dodge", binwidth = 1) +
# facet_grid(Belong~.) +
ylab("Count of Students") +
xlab("Number of Connections per Student") +
ggtitle("Number of Connections per Student Separated by Belongingness")
ggplot(dat, aes(Count_Connections, fill=Belong)) +
geom_histogram(position="dodge") +
# facet_grid(Belong~.) +
ylab("Count of Students") +
xlab("Number of Connections per Student") +
ggtitle("Number of Connections per Student Separated by Belongingness")
ggplot(dat, aes(factor(Count_Connections), fill=Belong)) +
geom_histogram(position="dodge") +
# facet_grid(Belong~.) +
ylab("Count of Students") +
xlab("Number of Connections per Student") +
ggtitle("Number of Connections per Student Separated by Belongingness")
ggplot(dat, aes(Count_Connections, fill=Belong)) +
geom_histogram(position="dodge") +
# facet_grid(Belong~.) +
ylab("Count of Students") +
xlab("Number of Connections per Student") +
ggtitle("Number of Connections per Student Separated by Belongingness")
ggplot(dat, aes(Count_Connections, fill=Belong)) +
geom_histogram(position="dodge") +
scale_x_continuous(breaks = seq(1,10, by = 1)) +
# facet_grid(Belong~.) +
ylab("Count of Students") +
xlab("Number of Connections per Student") +
ggtitle("Number of Connections per Student Separated by Belongingness")
setwd("~/Desktop/DATA-LA322")
library(palmerpenguins)
library(tidyverse)
library(tidymodels)
install.packages("tidymodels")
library(palmerpenguins)
library(tidyverse)
library(tidymodels)
library(ggplot2)
penguins
penguins %>%
ggplot(aes(x=bill_length_mm, y=flipper_length_mm, color = species, na.rm=TRUE)) +
geom_point() +
xlab("Bill Length in mm") +
ylab("Fipper Length in mm") +
ggtitle("Bill Length of Penguins by Flipper Length")
linear_penguins <- lm(flipper_length_mm ~ bill_length_mm, data = penguins)
linear_penguins
penguins %>%
ggplot(aes(x=bill_length_mm, y=flipper_length_mm, color = species, na.rm=TRUE)) +
geom_abline(aes(intercept = 126.68, slope = 1.69)) +
geom_point() +
xlab("Bill Length in mm") +
ylab("Fipper Length in mm") +
ggtitle("Bill Length of Penguins by Flipper Length")
residuals <- augment(linear_penguins, data = penguins)
residuals <- augment(linear_penguins, data = penguins)
library(palmerpenguins)
library(tidyverse)
library(tidymodels)
library(ggplot2)
penguins
penguins %>%
ggplot(aes(x=bill_length_mm, y=flipper_length_mm, color = species, na.rm=TRUE)) +
geom_point() +
xlab("Bill Length in mm") +
ylab("Fipper Length in mm") +
ggtitle("Bill Length of Penguins by Flipper Length")
linear_penguins <- lm(flipper_length_mm ~ bill_length_mm, data = penguins)
linear_penguins
penguins %>%
ggplot(aes(x=bill_length_mm, y=flipper_length_mm, color = species, na.rm=TRUE)) +
geom_abline(aes(intercept = 126.68, slope = 1.69)) +
geom_point() +
xlab("Bill Length in mm") +
ylab("Fipper Length in mm") +
ggtitle("Bill Length of Penguins by Flipper Length")
residuals <- augment(linear_penguins, data = penguins)
View(linear_penguins)
linear_penguins <- lm(flipper_length_mm ~ bill_length_mm, data = penguins)
linear_penguins
penguins %>%
ggplot(aes(x=bill_length_mm, y=flipper_length_mm, color = species)) +
geom_abline(aes(intercept = 126.68, slope = 1.69)) +
geom_point() +
xlab("Bill Length in mm") +
ylab("Fipper Length in mm") +
ggtitle("Bill Length of Penguins by Flipper Length")
residuals <- augment(linear_penguins, data = penguins)
library(palmerpenguins)
library(tidyverse)
library(tidymodels)
library(ggplot2)
penguins
penguins %>%
ggplot(aes(x=bill_length_mm, y=flipper_length_mm, color = species)) +
geom_point() +
xlab("Bill Length in mm") +
ylab("Fipper Length in mm") +
ggtitle("Bill Length of Penguins by Flipper Length")
linear_penguins <- lm(flipper_length_mm ~ bill_length_mm, data = penguins)
linear_penguins
penguins %>%
ggplot(aes(x=bill_length_mm, y=flipper_length_mm, color = species)) +
geom_abline(aes(intercept = 126.68, slope = 1.69)) +
geom_point() +
xlab("Bill Length in mm") +
ylab("Fipper Length in mm") +
ggtitle("Bill Length of Penguins by Flipper Length")
residuals <- augment(linear_penguins, data = penguins)
residuals <- augment(linear_penguins, data = penguins, na.rm=TRUE)
residuals <- augment(linear_penguins, data = penguins)
library(palmerpenguins)
library(tidyverse)
library(tidymodels)
library(ggplot2)
penguins
penguins %>%
ggplot(aes(x=bill_length_mm, y=flipper_length_mm, color = species)) +
geom_point() +
xlab("Bill Length in mm") +
ylab("Fipper Length in mm") +
ggtitle("Bill Length of Penguins by Flipper Length")
linear_penguins <- lm(flipper_length_mm ~ bill_length_mm, data = penguins)
linear_penguins
penguins %>%
ggplot(aes(x=bill_length_mm, y=flipper_length_mm, color = species)) +
geom_abline(aes(intercept = 126.68, slope = 1.69)) +
geom_point() +
xlab("Bill Length in mm") +
ylab("Fipper Length in mm") +
ggtitle("Bill Length of Penguins by Flipper Length")
residuals <- augment(linear_penguins, data = penguins)
linear_penguins <- lm(flipper_length_mm ~ bill_length_mm, data = penguins, na.rm = TRUE)
linear_penguins
linear_penguins <- lm(flipper_length_mm ~ bill_length_mm, data = penguins)
linear_penguins
library(palmerpenguins)
library(tidyverse)
library(tidymodels)
library(ggplot2)
df <- penguins %>% drop_na(bill_length_mm)
df
df %>%
ggplot(aes(x=bill_length_mm, y=flipper_length_mm, color = species)) +
geom_point() +
xlab("Bill Length in mm") +
ylab("Fipper Length in mm") +
ggtitle("Bill Length of Penguins by Flipper Length")
linear_penguins <- lm(flipper_length_mm ~ bill_length_mm, data = df)
linear_penguins
df %>%
ggplot(aes(x=bill_length_mm, y=flipper_length_mm, color = species)) +
geom_abline(aes(intercept = 126.68, slope = 1.69)) +
geom_point() +
xlab("Bill Length in mm") +
ylab("Fipper Length in mm") +
ggtitle("Bill Length of Penguins by Flipper Length")
residuals <- augment(linear_penguins, data = df)
residuals
ggplot(residuals, aes(x= bill_length_mm, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red") +
ylab("Residuals from Linear Model") +
xlab("Bill Length in mm") +
ggtitle("Residual Plot of Bill Length")
summary(linear_penguins)
neighbors <- list(5, 10, 15, 20, 25)
knn_model <- nearest_neighbor() %>%
set_engine("kknn") %>%
set_mode("regression")
for (n in neighbors){
knn_model <- knn_model %>% update(neighbors = n)
fit_knn <- fit(knn_model, flipper_length_mm ~ bill_length_mm, data = df)
plot <- polls_2008 %>%
mutate(preds = predict(fit_knn, df)$.pred) %>%
ggplot(aes(x = bill_length_mm, y = flipper_length_mm)) +
geom_point(aes(y = flipper_length_mm)) +
geom_line() +
ggtitle(paste(n, "Neighbors"))
print(plot)
}
install.packages("kknn")
neighbors <- list(5, 10, 15, 20, 25)
knn_model <- nearest_neighbor() %>%
set_engine("kknn") %>%
set_mode("regression")
for (n in neighbors){
knn_model <- knn_model %>% update(neighbors = n)
fit_knn <- fit(knn_model, flipper_length_mm ~ bill_length_mm, data = df)
plot <- polls_2008 %>%
mutate(preds = predict(fit_knn, df)$.pred) %>%
ggplot(aes(x = bill_length_mm, y = flipper_length_mm)) +
geom_point(aes(y = flipper_length_mm)) +
geom_line() +
ggtitle(paste(n, "Neighbors"))
print(plot)
}
neighbors <- list(5, 10, 15, 20, 25)
knn_model <- nearest_neighbor() %>%
set_engine("kknn") %>%
set_mode("regression")
for (n in neighbors){
knn_model <- knn_model %>% update(neighbors = n)
fit_knn <- fit(knn_model, flipper_length_mm ~ bill_length_mm, data = df)
plot <- df %>%
mutate(preds = predict(fit_knn, df)$.pred) %>%
ggplot(aes(x = bill_length_mm, y = flipper_length_mm)) +
geom_point(aes(y = flipper_length_mm)) +
geom_line() +
ggtitle(paste(n, "Neighbors"))
print(plot)
}
neighbors <- list(5, 10, 15, 20, 25)
knn_model <- nearest_neighbor() %>%
set_engine("kknn") %>%
set_mode("regression")
for (n in neighbors){
knn_model <- knn_model %>% update(neighbors = n)
fit_knn <- fit(knn_model, flipper_length_mm ~ bill_length_mm, data = df)
plot <- df %>%
mutate(preds = predict(fit_knn, df)$.pred) %>%
ggplot(aes(x = bill_length_mm, y = flipper_length_mm, color=species)) +
geom_point(aes(y = flipper_length_mm)) +
geom_line() +
ggtitle(paste(n, "Neighbors"))
print(plot)
}
neighbors <- list(5, 10, 15, 20, 25)
knn_model <- nearest_neighbor() %>%
set_engine("kknn") %>%
set_mode("regression")
for (n in neighbors){
knn_model <- knn_model %>% update(neighbors = n)
fit_knn <- fit(knn_model, flipper_length_mm ~ bill_length_mm, data = df)
plot <- df %>%
mutate(preds = predict(fit_knn, df)$.pred) %>%
ggplot(aes(x = bill_length_mm, y = flipper_length_mm)) +
geom_point(aes(y = flipper_length_mm)) +
geom_line() +
ggtitle(paste(n, "Neighbors"))
print(plot)
}
library(palmerpenguins)
library(tidyverse)
library(tidymodels)
library(ggplot2)
df <- penguins %>% drop_na(bill_length_mm) #For some reason my residual plot wasn't working becasue of NA values so I had to do this first
df #It had been working previously but stopped working oddly
df %>%
ggplot(aes(x=bill_length_mm, y=flipper_length_mm)) +
geom_point() +
xlab("Bill Length in mm") +
ylab("Fipper Length in mm") +
ggtitle("Bill Length of Penguins by Flipper Length")
library(palmerpenguins)
library(tidyverse)
library(tidymodels)
library(ggplot2)
df <- penguins %>% drop_na(bill_length_mm) #For some reason my residual plot wasn't working becasue of NA values so I had to do this first
df #It had been working previously but stopped working oddly
df %>%
ggplot(aes(x=bill_length_mm, y=flipper_length_mm, color = species)) +
geom_point() +
xlab("Bill Length in mm") +
ylab("Fipper Length in mm") +
ggtitle("Bill Length of Penguins by Flipper Length")
neighbors <- list(5, 10, 15, 20, 25)
knn_model <- nearest_neighbor() %>%
set_engine("kknn") %>%
set_mode("regression")
for (n in neighbors){
knn_model <- knn_model %>% update(neighbors = n)
fit_knn <- fit(knn_model, flipper_length_mm ~ bill_length_mm, data = df)
plot <- df %>%
mutate(preds = predict(fit_knn, df)$.pred) %>%
ggplot(aes(x = bill_length_mm, y = flipper_length_mm)) +
geom_point(aes(y = flipper_length_mm, , color = species)) +
geom_line() +
ggtitle(paste(n, "Neighbors"))
print(plot)
}
neighbors <- list(5, 10, 15, 20, 25)
knn_model <- nearest_neighbor() %>%
set_engine("kknn") %>%
set_mode("regression")
for (n in neighbors){
knn_model <- knn_model %>% update(neighbors = n)
fit_knn <- fit(knn_model, flipper_length_mm ~ bill_length_mm, data = df)
plot <- df %>%
mutate(preds = predict(fit_knn, df)$.pred) %>%
ggplot(aes(x = bill_length_mm, y = flipper_length_mm)) +
geom_point(aes(y = flipper_length_mm, color = species)) +
geom_line() +
ggtitle(paste(n, "Neighbors"))
print(plot)
}
neighbors <- list(5, 10, 15, 20, 25)
knn_model <- nearest_neighbor() %>%
set_engine("kknn") %>%
set_mode("regression")
for (n in neighbors){
knn_model <- knn_model %>% update(neighbors = n)
fit_knn <- fit(knn_model, flipper_length_mm ~ bill_length_mm, data = df)
plot <- df %>%
mutate(preds = predict(fit_knn, df)$.pred) %>%
ggplot(aes(x = bill_length_mm, y = flipper_length_mm)) +
geom_point(aes(y = flipper_length_mm, color = species)) +
geom_line() +
ggtitle(paste(n, "Neighbors")) +
xlab("Bill Length in mm") +
ylab("Fipper Length in mm") +
print(plot)
}
neighbors <- list(5, 10, 15, 20, 25)
knn_model <- nearest_neighbor() %>%
set_engine("kknn") %>%
set_mode("regression")
for (n in neighbors){
knn_model <- knn_model %>% update(neighbors = n)
fit_knn <- fit(knn_model, flipper_length_mm ~ bill_length_mm, data = df)
plot <- df %>%
mutate(preds = predict(fit_knn, df)$.pred) %>%
ggplot(aes(x = bill_length_mm, y = flipper_length_mm)) +
geom_point(aes(y = flipper_length_mm, color = species)) +
geom_line() +
ggtitle(paste(n, "Neighbors")) +
xlab("Bill Length in mm") +
ylab("Fipper Length in mm")
print(plot)
}
